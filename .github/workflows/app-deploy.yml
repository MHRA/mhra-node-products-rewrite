# name: Deploy

# on:
#   workflow_call:
#     inputs:
#       environment:
#         required: true
#         type: string
#     secrets:
#       AZURE_CREDENTIALS:
#         required: true
#       REGISTRY_ADDRESS:
#         required: true
#       REGISTRY_USERNAME:
#         required: true
#       REGISTRY_PASSWORD:
#         required: true
#     outputs:
#       appurl:
#         description: "App Service URL"
#         value: ${{ jobs.Deploy-App.outputs.outputurl }}
#       mainurl:
#         description: "Main slot App Service URL"
#         value: ${{ jobs.Deploy-App-Main.outputs.outputurl }}
#       slotname:
#         description: "Deployment Slot Name"
#         value: ${{ jobs.Deploy-App-Service-Slot.outputs.slotname }}
#       deployjobstatus:
#         value: ${{ jobs.Deploy-App.outputs.deployjobstatus }}

# jobs:
#   Deploy-App-Service-Slot:
#     if: |-
#       ${{ github.ref != 'refs/heads/main' && (inputs.environment == 'Development' || inputs.environment == 'Test') }}
#     runs-on: ubuntu-latest
#     environment:
#       name: ${{ inputs.environment }}
#     outputs:
#       slotname: ${{ steps.setslotname.outputs.slotname }}
#     steps:
#     #   - name: "Set slot name 📚"
#         id: setslotname
#         env:
#           environment: ${{ inputs.environment }}
#         run: |
#           if [[ ${{ github.event_name }} = "push" ]]
#           then
#             slotname=$(echo $GITHUB_REF_NAME | cut -d '/' -f 2)
#           fi
#           if [[ ${{ github.event_name }} = "pull_request" ]]
#           then
#             slotname=$(echo $GITHUB_HEAD_REF | cut -d '/' -f 2)
#           fi
#           echo "slotname=${slotname:0:18}-$environment" >> $GITHUB_OUTPUT
#       - name: "Log in with Azure 🆔"
#         uses: azure/login@v2
#         with:
#           creds: "${{ secrets.AZURE_CREDENTIALS }}"
#       - name: "Create App Service Slot 🥏"
#         uses: azure/CLI@v2
#         env:
#           slotname: ${{ steps.setslotname.outputs.slotname }}
#         with:
#           inlineScript: |
#             echo "The slot is ${slotname}"
#             az webapp deployment slot create --name ${{ vars.AZURE_WEBAPP_NAME }} --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} --slot $slotname --configuration-source ${{ vars.AZURE_WEBAPP_NAME }}

#   Deploy-App:
#     if: |-
#       ${{ github.ref != 'refs/heads/main' && (inputs.environment == 'Development' || inputs.environment == 'Test') }}
#     needs: Deploy-App-Service-Slot
#     runs-on: ubuntu-latest
#     outputs:
#       outputurl: ${{ steps.deploy.outputs.url }}
#       deployjobstatus: ${{ job.status }}
#     environment:
#       name: ${{ inputs.environment }}
#       url: ${{ steps.deploy.outputs.url }}
#     steps:
#       - name: "Log in with Azure 🆔"
#         uses: azure/login@v2
#         with:
#           creds: "${{ secrets.AZURE_CREDENTIALS }}"
#       - name: "Deploy MWC app external image to Azure WebApp 🛫"
#         id: deploy
#         run: |
#           az webapp config container set --docker-registry-server-url https://${{ secrets.REGISTRY_ADDRESS }} --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} --docker-custom-image-name "${{ secrets.REGISTRY_ADDRESS }}/mwc/app-external:${{ github.sha }}" --name ${{ vars.AZURE_WEBAPP_NAME }} --slot ${{ needs.Deploy-App-Service-Slot.outputs.slotname }} -g ${{ vars.AZURE_RESOURCE_GROUP }}
#           json=$(az webapp config hostname list -g ${{ vars.AZURE_RESOURCE_GROUP }} --webapp-name ${{ vars.AZURE_WEBAPP_NAME }} --slot ${{ needs.Deploy-App-Service-Slot.outputs.slotname }})
#           echo "url="https://"$(echo $json | jq '.[0].name' | cut -d '"' -f 2)">> "$GITHUB_OUTPUT"

#   Deploy-App-Main:
#     if: github.ref == 'refs/heads/main' || startsWith( github.ref, 'refs/tags/v' )
#     runs-on: ubuntu-latest
#     outputs:
#       outputurl: ${{ steps.deploy.outputs.url }}
#     environment:
#       name: ${{ inputs.environment }}
#       url: ${{ steps.deploy.outputs.url }}
#     steps:
#       - name: "Log in with Azure 🆔"
#         uses: azure/login@v2 
#         with:
#           creds: "${{ secrets.AZURE_CREDENTIALS }}"
#       - name: "Deploy Container image to Azure WebApp 🛫"
#         id: deploy
#         run: |
#           az webapp config container set --docker-registry-server-url https://${{ secrets.REGISTRY_ADDRESS }} --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} --docker-custom-image-name "${{ secrets.REGISTRY_ADDRESS }}/mwc/app-external:${{ github.sha }}" -n ${{ vars.AZURE_WEBAPP_NAME }} -g ${{ vars.AZURE_RESOURCE_GROUP }}
#           json=$(az webapp config hostname list -g ${{ vars.AZURE_RESOURCE_GROUP }} --webapp-name ${{ vars.AZURE_WEBAPP_NAME }})
#           echo "url="https://"$(echo $json | jq '.[0].name' | cut -d '"' -f 2)">> "$GITHUB_OUTPUT"